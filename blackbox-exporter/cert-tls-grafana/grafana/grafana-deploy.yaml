apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-grafana
  namespace: monitoring
  labels:
    helm.sh/chart: grafana-8.3.2
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: my-grafana
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: my-grafana
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: my-grafana
    spec:      
      serviceAccountName: my-grafana
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsNonRoot: true
        runAsUser: 472
      enableServiceLinks: true
      containers:
        - name: grafana
          image: "docker.io/grafana/grafana:11.1.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/grafana.ini"
              subPath: grafana.ini
            - name: storage
              mountPath: "/var/lib/grafana"
            - name: tls-secret
              mountPath: /etc/tls
              readOnly: true
            - name: grafana-datasource  
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana-db-providers
              mountPath: /etc/grafana/provisioning/dashboards
            - name: grafana-dashboards
              mountPath: /var/lib/grafana/dashboards
          ports:
            - name: grafana
              containerPort: 3000
              protocol: TCP
            - name: gossip-tcp
              containerPort: 9094
              protocol: TCP
            - name: gossip-udp
              containerPort: 9094
              protocol: UDP
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: my-grafana
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-grafana
                  key: admin-password
            - name: GF_PATHS_DATA
              value: /var/lib/grafana/
            - name: GF_PATHS_LOGS
              value: /var/log/grafana
            - name: GF_PATHS_PLUGINS
              value: /var/lib/grafana/plugins
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTPS                     
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTPS
      volumes:
        - name: config
          configMap:
            name: my-grafana
        - name: storage
          emptyDir: {}
        - name: tls-secret
          secret:
            secretName: selfsigned-cert
        - name: grafana-datasource 
          configMap:
            name: grafana-datasource
        - name: grafana-db-providers
          configMap:
            name: grafana-dashboard-providers

        - name: grafana-dashboards
          projected:
            sources:
            - configMap:
                name: grafana-dashboard-license
            - configMap:
                name:  grafana-dashboard-blackbox


